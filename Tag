html(hypertext markup language) is made by Sir Tim Berners-Lee to make Web page.
Hypertext = 웹 페이지의 특정 부분을 연결해주는 *링크;
markup language = 정보를 구조적, 계층적으로 표현가능한 언어.


<!-- What is tag? -->
Html은 곧 태그의 집합이며, 근본을 이루는 규칙.

<h1>  Hello, World  </h1>
|시작태그(start tag) 종료태그(end tag)|
|            내용                  |
==>> |(파이프)로 엮인 구역 전부를 요소(element)라고 말한다.


<!-- Caution! Nesting tags -->
중첩 태그는 태그 안에 또다른 태그를 선언할 때 사용한다.
일부 경우를 제외하고, 중첩이 얼마나 되든, 어떤 태그를 쓰든 문제가 되지 않는다.
*일부의 경우 = 태그의 구조 특성으로 인한 문제.

하지만 중첩되는 태그는 부모태그를 벗어나서는 안된다.

<h1>Hello,<i>World</h1></i> ==> Bad
<h1>Hello,<i?World</i><h1> ==> Good

<!-- Empty Tag --->
<br> <img src=""> <input type=""> 

빈 태그는 내용(contents)이 들어가지 않는다. 따라서 종료 태그도 필요없다.
이는 브라우저가 내용을 직접 그려주기 때문이다.

이런 모양새를 브라우저가 내용을 대체한다고 해서 replacement 태그(대체되는 태그)라고 한다.
물론, 대체되는 태그만 있는게 아니라 화면에 출력될 내용이 없어 다른 용도로 쓰이는 태그도 존재한다.
* <br> 같은 경우

<!-- Empty Space -->
<h1>Hello, World</h1>
<h1>Hello,   World</h1>
<h1>
  Hello,
  World
</h1>

==> 동일한 결과 : Hello world
Html은 두 칸 이상의 공백과 개행을 모두 무시한다. (공백 1칸 = 공백 n칸 = 개행)
마지막 경우는 탭 간격에 개행을 했음에도 불구하고 동일하게 출력되는 걸로 알 수 있다.
*css에서 이런 공백처리 방식을 제어할 수 있다.

<!-- Attribute -->
<h1 id="title">Hello, World</h1>
<tag attribute="a.name"> Contents </tag>


<!-- Attributes in once --->
<h1 id="title" class="main">Hello, world!</h1>

[Attribute] == Global attributes + Attribute for some tag;
Examples of tag, (ID, Class) = global attribute.
